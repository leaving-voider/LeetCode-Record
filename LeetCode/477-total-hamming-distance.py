###############################################################################################
# 题目较简单，稍加分析，即可知所有数的第i位上的汉明距离总和为：为1的个数*为0的个数
###########
# 时间复杂度：O(n⋅L)，在此题中 n 是数组 nums 的长度，L=30
# 空间复杂度：O(1)
###############################################################################################
class Solution:
    def totalHammingDistance(self, nums: List[int]) -> int:
        len_ = len(nums)
        res = 0
        # 30位足够
        for i in range(29, -1, -1):
            # 计数多少个为1
            n = sum([(val>>i)&1 for val in nums]) # 每个数的第i位取出来，加起来的值就是1的个数
            res += n*(len_-n) # 1的个数*0的个数，即所有该位上的汉明距离
        return res